{"componentChunkName":"component---src-templates-post-js","path":"/3a2785c2-7104-5aa5-85b0-0b210653d98c","result":{"data":{"markdownRemark":{"html":"<p>是非、買って読んで欲しい。\n学習のログを残す。\n<a href=\"https://www.oreilly.co.jp/books/9784873119014/\">https://www.oreilly.co.jp/books/9784873119014/</a></p>\n<p>github\n<a href=\"https://github.com/cloudnativedevops/demo\">https://github.com/cloudnativedevops/demo</a></p>\n<p>流れが早いので多少内容が古くなっていて（2019/3月）監修訳がついている。<br>\n特にツールの流行りすたりが激しい。<br>\n<a href=\"https://landscape.cncf.io/\">CNCFのlandscape</a>がとても勉強になる。</p>\n<p> 【】は自分の感想とか調べた補足とか、ツールに関しては結構調べてます、後CI/CD周り</p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> : は本番環境ではチェックしておいた方がいいもの（自分の主観）</li>\n</ul>\n<h1 id=\"1章-クラウドでの革命\"><a href=\"#1%E7%AB%A0-%E3%82%AF%E3%83%A9%E3%82%A6%E3%83%89%E3%81%A7%E3%81%AE%E9%9D%A9%E5%91%BD\" aria-label=\"1章 クラウドでの革命 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1章 クラウドでの革命</h1>\n<ul>\n<li>1960年代のメインフレームの時分割利用が一回りして戻ってきたのがクラウド</li>\n<li>コンピュータを買わずに処理能力を買う</li>\n<li>差別化につながらない作業をこなしてくれるマネージドサービス</li>\n<li>\n<p>DevOps</p>\n<ul>\n<li>DevとOpsは分かれていた</li>\n<li>クラウド（分散システム）は運用含めて全体理解が必要</li>\n<li>DevOpsは双方のグループの連携の試み</li>\n<li>DevOpsの考え方には議論が多い</li>\n<li>\n<p>4つの柱「文化、自動化、測定、共有」</p>\n<ul>\n<li>\n<p>ビジネス観点</p>\n<ul>\n<li>\n<p>自動化とプラクティス  </p>\n<ul>\n<li>リリースサイクル迅速化 → ソフトウェア品質向上</li>\n</ul>\n</li>\n<li>\n<p>導入にはビジネス文化の根本的な変革が必要</p>\n<ul>\n<li>経営幹部の戦略的なレベルからの取り組み</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Infrastructure as Code<br>\nクラウドインフラの自動プロビジョニング</p>\n<ul>\n<li>運用エンジニア = クラウドを自動化するソフトウェアを書く人</li>\n<li>開発者 = 分散システムを考慮した設計をする人</li>\n<li>↑共にまなぶことが重要</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>コンテナ<br>\nデプロイには、<br>\nソフトウェアと依存関係(ライブラリ..)、設定（キーやパスワード）などが必要。<br>\nプロビジョニング、ネットワーク接続、デプロイ、設定、監視など必要。</p>\n<ul>\n<li>\n<p>これまで</p>\n<ul>\n<li>Puppet, Ansibleなど<br>\nデプロイするソフトウェアを実行、設定、更新するコード</li>\n<li>まるっと仮想マシンイメージにしちゃう<br>\nビルド・保守に時間がかかる、運用の不安定さ、DLもデプロイも遅い</li>\n</ul>\n</li>\n<li>\n<p>コンテナ登場</p>\n<ul>\n<li>標準のパッケージング＋配布形式</li>\n</ul>\n</li>\n<li>CPU上で直接実行され、仮想化のオーバーヘッドがない</li>\n<li>VMよりサイズが小さい</li>\n<li>密閉状態にパッケージされ、必要な依存関係を持ち運べる</li>\n</ul>\n</li>\n<li>\n<p>オーケストラの指揮\n様々なアーキテクチャ、OS、などの資産管理の世界線<br>\n→ オーケストレータの実行、ポチッとな</p>\n<ul>\n<li><strong>Kubernetes</strong> </li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>Kubernetesは、自動化、フェイルオーバ、集中ロギング、監視など、非常に優秀なシステム\nアドミニストレータが行うであろうことを実行します。DevOpsコミュニティで学習蓄積されてき\nてきた知見を取り入れ、すぐに使用できるデフォルトの機能となっています。 - Kelsey Hightower</p>\n</blockquote>\n<ul>\n<li>\n<p>デプロイを容易にするKubernetes</p>\n<ul>\n<li>\n<p>デプロイ時間と労力の削減</p>\n<ul>\n<li>デフォルト、ローリングアップデート（ゼロダウンタイム）<br>\n他にもいくつかのデプロイ方法がある</li>\n</ul>\n</li>\n<li>オートスケールサポート</li>\n<li>冗長性とフェイルオーバー</li>\n<li>限られたリソースを効率的に活用するのでインフラコストを削減できる</li>\n<li>\n<p><strong>プロバイダに非依存</strong></p>\n<ul>\n<li>抽象化によりクラウド独自の詳細が隠蔽される</li>\n</ul>\n</li>\n<li>\n<p>Kubernetesを使用する必要性が低い領域</p>\n<ul>\n<li>ステートフルなデータベースなど</li>\n<li>クラウド関数で片付くようなスタンドアロン型処理 </li>\n</ul>\n</li>\n<li><strong>Knative</strong><br>\nコンテナとクラウド関数の両方に対応したソフトウェアデリバリプラットフォーム</li>\n</ul>\n</li>\n<li>\n<p>クラウドネイティブ<br>\n差別化につながらない要素は実行せずビジネスを加速するという実践</p>\n<ul>\n<li>自動化可能</li>\n<li>ユビキタスかつ柔軟</li>\n<li>弾力的かつスケーラブル</li>\n<li>動的（高可用性）</li>\n<li>オブザーバブル</li>\n<li>分散化</li>\n</ul>\n</li>\n<li>分散型のDevOps<br>\n専用のインフラ組織→<br>\n運用の専門者が各チームに分散される<br>\nほとんどの組織で運用・開発の片方しかできない人は生き残る余地がなくなる<br>\n【そうなのか？】</li>\n<li>\n<p><strong>開発者生産性工学（DPE）</strong></p>\n<ul>\n<li>運用だけではなく、ツール構築、問題の解決、など<br>\n開発者の仕事の効率化をするためのあらゆることを担う強力な中央チーム</li>\n<li>組織規模が大きくなると自然に組織される<br>\n各プロジェクトやチームには専門のSREを配属することで開発とインフラの橋渡しをする<br>\n【インフラ基盤の中央チーム＋チーム専門のインフラアドバイザ、の構成になっていく？】</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"2章-kubernetes最初の一歩\"><a href=\"#2%E7%AB%A0-kubernetes%E6%9C%80%E5%88%9D%E3%81%AE%E4%B8%80%E6%AD%A9\" aria-label=\"2章 kubernetes最初の一歩 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2章 Kubernetes最初の一歩</h1>\n<p>Go+Dockerのお話</p>\n<ul>\n<li>Goのマルチステージビルド</li>\n</ul>\n<h2 id=\"デモアプリケーションの実行\"><a href=\"#%E3%83%87%E3%83%A2%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E5%AE%9F%E8%A1%8C\" aria-label=\"デモアプリケーションの実行 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>デモアプリケーションの実行</h2>\n<p><a href=\"https://kubernetes.io/ja/docs/tutorials/kubernetes-basics/deploy-app/deploy-interactive/\">https://kubernetes.io/ja/docs/tutorials/kubernetes-basics/deploy-app/deploy-interactive/</a> を参考に書き換えた\nkubeでdockerを起動して、helloを表示するだけのAPIを叩く</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl create deployment demo --image<span class=\"token operator\">=</span>cloudnatived/demo:hello\n\n$ kubectl get deployments\nNAME   READY   UP-TO-DATE   AVAILABLE   AGE\ndemo   <span class=\"token number\">1</span>/1     <span class=\"token number\">1</span>            <span class=\"token number\">1</span>           6m2s\n\n$ kubectl port-forward deploy/demo <span class=\"token number\">9999</span>:8888\nForwarding from <span class=\"token number\">127.0</span>.0.1:9999 -<span class=\"token operator\">></span> <span class=\"token number\">8888</span>\nForwarding from <span class=\"token punctuation\">[</span>::1<span class=\"token punctuation\">]</span>:9999 -<span class=\"token operator\">></span> <span class=\"token number\">8888</span>\n\n$ <span class=\"token function\">curl</span> http://localhost:9999\nHello, 世界</code></pre></div>\n<h1 id=\"3章-kubernetsの環境の選択\"><a href=\"#3%E7%AB%A0-kubernets%E3%81%AE%E7%92%B0%E5%A2%83%E3%81%AE%E9%81%B8%E6%8A%9E\" aria-label=\"3章 kubernetsの環境の選択 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3章 Kubernetsの環境の選択</h1>\n<p><img src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/152194/fc79ac38-b42e-43e4-0f66-719ef1a957fa.png\" alt=\"o7leok.png\"></p>\n<p>引用： <a href=\"https://x-team.com/blog/introduction-kubernetes-architecture/\">https://x-team.com/blog/introduction-kubernetes-architecture/</a></p>\n<ul>\n<li>\n<p>コントロールプレーン（Master node）<br>\n複数存在し、高可用性を備える</p>\n<ul>\n<li>kube-apiserver<br>\nAPIリクエスト処理</li>\n<li>etcd<br>\n存在するノード・クラスタのリソースの詳細などを保存するDB</li>\n<li>kube-scheduler<br>\n新たに作成されるPodが実行される場所を決定する</li>\n<li>kube-controller-manager\nDeploymentなどの実行の管理</li>\n<li>cloud-controller-manager<br>\nクラウドプロバイダとやりとりしてリソースを管理</li>\n</ul>\n</li>\n<li>\n<p>ノード（Worker node）</p>\n<ul>\n<li>kubelet<br>\nノードにスケジューリングされているワークロードを起動するコンテナランタイムの運用・ステータス監視</li>\n<li>kube-proxy\nPodのグループに対してのトラフィックルーティングする単一不変の仮想IPアドレスを提供する機能の実行管理  </li>\n<li>コンテナランタイム<br>\nコンテナの起動・終了、通信処理</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"障害について\"><a href=\"#%E9%9A%9C%E5%AE%B3%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\" aria-label=\"障害について permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>障害について</h2>\n<ul>\n<li>Chaos Monkey、カオステストでランダムにノードやPodを停止させてまともに動くかテストする</li>\n<li>セルフホスティングは高難易度なのでマネージドサービスを使え</li>\n</ul>\n<h2 id=\"gke\"><a href=\"#gke\" aria-label=\"gke permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GKE</h2>\n<ul>\n<li>GKEが最善のマネージドサービスなのでこれを使え</li>\n<li>マルチゾーンクラスタでノードを分散配置できる</li>\n<li>リージョナルクラスタは、複数のマスターノードも障害ゾーンに跨って分散される</li>\n<li>セキュリティパッチ自動適用、コントロールプレーンやetcdの高可用性、などはGoogleが面倒を見る</li>\n<li>クラスタのオートスケール</li>\n</ul>\n<h2 id=\"eks\"><a href=\"#eks\" aria-label=\"eks permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>EKS</h2>\n<ul>\n<li>ECSは悪くないがKubernetesにこそ未来があるためEKSを提供した</li>\n<li><a href=\"https://hasura.io/blog/gke-vs-aks-vs-eks-411f080640dc/\">自分で行う必要のあるセットアップが多くなる覚悟が必要</a></li>\n<li>クラスタインフラだけでなくマスターノードにも課金が発生するためGKEより割高</li>\n</ul>\n<h2 id=\"aks\"><a href=\"#aks\" aria-label=\"aks permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AKS</h2>\n<ul>\n<li>急速な追い上げを見せている</li>\n<li>【Kubernetes co-founderの<a href=\"https://twitter.com/brendandburns\">Brendan Burns</a>がAzureのコンテナ関連サービスのトップをしている】<br>\n【Azureいい!】</li>\n</ul>\n<h2 id=\"その他\"><a href=\"#%E3%81%9D%E3%81%AE%E4%BB%96\" aria-label=\"その他 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>その他</h2>\n<ul>\n<li>OpenShift</li>\n<li>IBM Cloud Kubernetes Service</li>\n<li>HKS（VMware Essential PKS）</li>\n<li><a href=\"https://kubernetes.io/ja/docs/setup/production-environment/turnkey/stackpoint/\">Stackpoint.io</a>（NKS）<br>\nマルチクラウドでワーカノードを実行する、マスターノードはマネージドでWebポータルから管理する</li>\n<li>CKE</li>\n<li>kops</li>\n<li>kubespray</li>\n<li>TK8</li>\n<li>Kubernetes The Hard Way<br>\nk8sクラスタ構築の指南書的なもの</li>\n<li>kubeadm</li>\n<li>Tarmak</li>\n<li>RKE</li>\n<li>Puppet Kubernetesモジュール</li>\n<li>Kubeformation（死んでるプロジェクトぽい）  </li>\n</ul>\n<h2 id=\"ベンダロックインの問題\"><a href=\"#%E3%83%99%E3%83%B3%E3%83%80%E3%83%AD%E3%83%83%E3%82%AF%E3%82%A4%E3%83%B3%E3%81%AE%E5%95%8F%E9%A1%8C\" aria-label=\"ベンダロックインの問題 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ベンダロックインの問題</h2>\n<ul>\n<li>Kubernetesを利用すること自体がロックインの回避に繋がるのでマネージドを使っても問題ない</li>\n<li>どうしても必要ならKubernetesセルフホスティングツールを使用する\nkops, Kubespray</li>\n</ul>\n<h2 id=\"クラスタレスのコンテナサービス\"><a href=\"#%E3%82%AF%E3%83%A9%E3%82%B9%E3%82%BF%E3%83%AC%E3%82%B9%E3%81%AE%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9\" aria-label=\"クラスタレスのコンテナサービス permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>クラスタレスのコンテナサービス</h2>\n<ul>\n<li>AWS Fargate</li>\n<li>\n<p>Azure Container Instances</p>\n<ul>\n<li>AKSとの統合機能あり</li>\n<li>サーバレスコンテナ（著者は混乱があるので使いたくない用語と言っている、実際にはサーバはあるから）</li>\n<li>Event Gridを用いて通信</li>\n<li>Functionsを利用してACIコンテナ作成・実行</li>\n<li>Flowでワークフロー構築</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"4章-kubernetesオブジェクトの基本操作\"><a href=\"#4%E7%AB%A0-kubernetes%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AE%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C\" aria-label=\"4章 kubernetesオブジェクトの基本操作 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4章 Kubernetesオブジェクトの基本操作</h1>\n<h2 id=\"deployment\"><a href=\"#deployment\" aria-label=\"deployment permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment</h2>\n<p>  スーパーバイザ、コンテナに関する全ての情報を格納し監督する  </p>\n<ul>\n<li>コントローラはリソースを監視して望ましい数にレプリカを保つ</li>\n<li>DeploymentはReplicaSetオブジェクトを作成して、これがレプリカの管理を処理する</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># deploymentの詳細</span>\n$ kubectl describe deployments/demo</code></pre></div>\n<h2 id=\"pod\"><a href=\"#pod\" aria-label=\"pod permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pod</h2>\n<p>  1つ以上のコンテナのグループを表現する用語</p>\n<ul>\n<li>\n<p>Deploymentを作成することで、DeploymentがPodを起動</p>\n<ul>\n<li>ReplicaSetがバージョンを表現する</li>\n<li><a href=\"https://dev.to/cloudskills/kubernetes-deployment-strategy-recreate-3kgn\">Deployment, ReplicaSet, Podの関係</a></li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 調整ループ、望ましい状態への調整トライをループし続ける</span>\n$ kubectl get pods --selector <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>demo\nNAME                   READY   STATUS    RESTARTS   AGE\ndemo-c84f49bbc-f9ztc   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          4h27m\n$ kubectl delete pods --selector <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>demo\npod <span class=\"token string\">\"demo-c84f49bbc-f9ztc\"</span> deleted\n$ kubectl get pods --selector <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>demo\nNAME                   READY   STATUS    RESTARTS   AGE\ndemo-c84f49bbc-9jq6k   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          10s\n\n<span class=\"token comment\"># 実験が終わったらdeploymentをシャットダウン</span>\n$ kubectl delete all --selector <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>demo\npod <span class=\"token string\">\"demo-c84f49bbc-9jq6k\"</span> deleted\ndeployment.apps <span class=\"token string\">\"demo\"</span> deleted\nreplicaset.apps <span class=\"token string\">\"demo-c84f49bbc\"</span> deleted\n$ kubectl get pods --selector <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>demo\nNo resources found.</code></pre></div>\n<h2 id=\"kubernetesスケジューラ\"><a href=\"#kubernetes%E3%82%B9%E3%82%B1%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%A9\" aria-label=\"kubernetesスケジューラ permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Kubernetesスケジューラ</h2>\n<p>Deployment<br>\n-> 新しいレプリカが必要<br>\n-> KubernetesデータベースにPodリソースを作成、Podがキューに追加<br>\n-> スケジューリングされていないPodのキューがあれば、Podをキューから取り出して、実行場所となるノードを見つける<br>\n-> Podがノードにスケジュールされると、kubeletがコンテナを起動する  </p>\n<h2 id=\"リソースマニフェスト\"><a href=\"#%E3%83%AA%E3%82%BD%E3%83%BC%E3%82%B9%E3%83%9E%E3%83%8B%E3%83%95%E3%82%A7%E3%82%B9%E3%83%88\" aria-label=\"リソースマニフェスト permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>リソースマニフェスト</h2>\n<p>リソースの望ましい状態に関する仕様（マニフェスト）</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml:deployment.yaml\"><pre class=\"language-yaml:deployment.yaml\"><code class=\"language-yaml:deployment.yaml\">apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: demo\n  labels:\n    app: demo\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: demo\n  template:\n    metadata:\n      labels:\n        app: demo\n    spec:\n      containers:\n      - name: demo\n        image: cloudnatived/demo:hello\n        ports:\n        - containerPort: 8888</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl apply -f deployment.yaml\n\n<span class=\"token comment\"># コンテナは立つ</span>\n$ kubectl get pods --selector <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>demo\nNAME                    READY   STATUS    RESTARTS   AGE\ndemo-64f9f8d47d-jjmc7   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          86s\n\n<span class=\"token comment\"># うまくいかない・・</span>\n$ <span class=\"token function\">curl</span> http://localhost:9999\ncurl: <span class=\"token punctuation\">(</span><span class=\"token number\">52</span><span class=\"token punctuation\">)</span> Empty reply from server</code></pre></div>\n<h2 id=\"serviceリソース\"><a href=\"#service%E3%83%AA%E3%82%BD%E3%83%BC%E3%82%B9\" aria-label=\"serviceリソース permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Serviceリソース</h2>\n<p>Webプロキシ、ロードバランサのようなもので、\nPodに対するリクエストをルーティングするための単一のエントリポイントを提供する。</p>\n<p>自分のPort9999をPodのport8888に転送している</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml:service.yaml\"><pre class=\"language-yaml:service.yaml\"><code class=\"language-yaml:service.yaml\">apiVersion: v1\nkind: Service\nmetadata:\n  name: demo\n  labels:\n    app: demo\nspec:\n  ports:\n  - port: 9999\n    protocol: TCP\n    targetPort: 8888\n  selector:\n    app: demo\n  type: ClusterIP</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl apply -f service.yaml\n\n<span class=\"token comment\"># demo Serviceをローカルマシンのポートに接続する</span>\n$ kubectl port-forward deploy/demo <span class=\"token number\">9999</span>:8888\n\n$ <span class=\"token function\">curl</span> http://localhost:9999\nHello, 世界</code></pre></div>\n<p>総合的な情報を出力</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl describe pod --selector <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>demo\nName:           demo-64f9f8d47d-7nzt4\nNamespace:      default\nPriority:       <span class=\"token number\">0</span>\nNode:           docker-desktop/192.168.65.3\nStart Time:     Mon, <span class=\"token number\">24</span> Feb <span class=\"token number\">2020</span> <span class=\"token number\">16</span>:34:45 +0900\nLabels:         <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>demo\n                pod-template-hash<span class=\"token operator\">=</span>64f9f8d47d\nAnnotations:    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nStatus:         Running\nIP:             <span class=\"token number\">10.1</span>.0.12\nControlled By:  ReplicaSet/demo-64f9f8d47d\nContainers:\n  demo:\n    Container ID:   docker://0a7cf35fefc681daa29cf3a064e10ed82d3c459c551313cc4c84e9950622a749\n    Image:          cloudnatived/demo:hello\n    Image ID:       docker-pullable://cloudnatived/demo@sha256:aeae1e551a6cbd60bcfd56c3b4ffec732c45b8012b7cb758c6c4a34779e0e7fb\n    Port:           <span class=\"token number\">8888</span>/TCP\n    Host Port:      <span class=\"token number\">0</span>/TCP\n    State:          Running\n      Started:      Mon, <span class=\"token number\">24</span> Feb <span class=\"token number\">2020</span> <span class=\"token number\">16</span>:34:46 +0900\n    Ready:          True\n    Restart Count:  <span class=\"token number\">0</span>\n    Environment:    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from default-token-96xfm <span class=\"token punctuation\">(</span>ro<span class=\"token punctuation\">)</span>\nConditions:\n  Type              Status\n  Initialized       True\n  Ready             True\n  ContainersReady   True\n  PodScheduled      True\nVolumes:\n  default-token-96xfm:\n    Type:        Secret <span class=\"token punctuation\">(</span>a volume populated by a Secret<span class=\"token punctuation\">)</span>\n    SecretName:  default-token-96xfm\n    Optional:    <span class=\"token boolean\">false</span>\nQoS Class:       BestEffort\nNode-Selectors:  <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nTolerations:     node.kubernetes.io/not-ready:NoExecute <span class=\"token keyword\">for</span> 300s\n                 node.kubernetes.io/unreachable:NoExecute <span class=\"token keyword\">for</span> 300s\nEvents:\n  Type    Reason     Age   From                     Message\n  ----    ------     ----  ----                     -------\n  Normal  Scheduled  107s  default-scheduler        Successfully assigned default/demo-64f9f8d47d-7nzt4 to docker-desktop\n  Normal  Pulled     107s  kubelet, docker-desktop  Container image <span class=\"token string\">\"cloudnatived/demo:hello\"</span> already present on machine\n  Normal  Created    107s  kubelet, docker-desktop  Created container demo\n  Normal  Started    106s  kubelet, docker-desktop  Started container demo</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># シャットダウン</span>\n$ kubectl delete -f ./\ndeployment.apps <span class=\"token string\">\"demo\"</span> deleted\n<span class=\"token function\">service</span> <span class=\"token string\">\"demo\"</span> deleted</code></pre></div>\n<h2 id=\"helm-kubernetesパッケージマネージャ\"><a href=\"#helm-kubernetes%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%83%9E%E3%83%8D%E3%83%BC%E3%82%B8%E3%83%A3\" aria-label=\"helm kubernetesパッケージマネージャ permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Helm: Kubernetesパッケージマネージャ</h2>\n<p>【以下、書籍と異なるバージョンでコメントも個人のものが含まれている】\naptやyum的なものだが、コンテナイメージ自体は含まれない。メタデータの管理。\n本はHelmのバージョンが2で古いっぽいので、バージョン3でやってみる。</p>\n<ul>\n<li>チャート<br>\nアプリケーションをk8sで実行するために必要なリソース定義が全て格納されたHelmパッケージ</li>\n<li>リポジトリ<br>\nチャートを収集・共有できる場所<br>\n<a href=\"https://hub.helm.sh/\">helm hub</a>なるものがありChartが公開されている</li>\n<li>リリース<br>\nチャートの特定のインスタンス</li>\n</ul>\n<p><a href=\"https://helm.sh/docs/intro/quickstart/\">公式</a>を見つつ試す。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ brew <span class=\"token function\">install</span> helm\n$ helm version\nversion.BuildInfo<span class=\"token punctuation\">{</span>Version:<span class=\"token string\">\"v3.1.1\"</span>, GitCommit:<span class=\"token string\">\"afe70585407b420d0097d07b21c47dc511525ac8\"</span>, GitTreeState:<span class=\"token string\">\"clean\"</span>, GoVersion:<span class=\"token string\">\"go1.13.8\"</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># https://github.com/cloudnativedevops/demo/tree/master/hello-helm/k8s/demo</span>\n<span class=\"token comment\"># リポジトリをcloneしてディレクトリに移動</span>\n$ helm <span class=\"token function\">install</span> demo <span class=\"token builtin class-name\">.</span>\nNAME: demo\nLAST DEPLOYED: Mon Feb <span class=\"token number\">24</span> <span class=\"token number\">17</span>:18:54 <span class=\"token number\">2020</span>\nNAMESPACE: default\nSTATUS: deployed\nREVISION: <span class=\"token number\">1</span>\nTEST SUITE: None\n\n$ helm list\nNAME\tNAMESPACE\tREVISION\tUPDATED                            \tSTATUS  \tCHART     \tAPP VERSION\ndemo\tdefault  \t<span class=\"token number\">1</span>       \t<span class=\"token number\">2020</span>-02-24 <span class=\"token number\">17</span>:18:54.14197 +0900 JST\tdeployed\tdemo-1.0.1\n\n<span class=\"token comment\"># kubectl port-forward deploy/demo 9999:8888は実施が必要</span>\n$ <span class=\"token function\">curl</span> http://localhost:9999\nHello, 世界</code></pre></div>\n<h1 id=\"5章-リソースの管理\"><a href=\"#5%E7%AB%A0-%E3%83%AA%E3%82%BD%E3%83%BC%E3%82%B9%E3%81%AE%E7%AE%A1%E7%90%86\" aria-label=\"5章 リソースの管理 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5章 リソースの管理</h1>\n<ul>\n<li>\n<p>コンテナには常にリソース制限とリソース要求を指定する</p>\n<ul>\n<li>各Podに許容される最大・最小のリソース要件を把握して効果的にスケジュールしたい</li>\n<li>\n<p>リソース単位</p>\n<ul>\n<li>1CPU=1 AWS vCPU, 1Azure vCore, etc..</li>\n<li>メモリ、メビバイト</li>\n</ul>\n</li>\n<li>リソース要求<br>\nリソース要求より少ないリソースしか利用できないノードでは、<br>\nPodはスケジューリングされずにPending状態となる</li>\n<li>\n<p>リソース制限<br>\n上限を超える使用は  </p>\n<ul>\n<li>CPU: 処理能力を絞り込むスロットル処理の対象となる  </li>\n<li>Mem: Pod強制終了、可能なら再スケジューリング</li>\n</ul>\n</li>\n<li>QoS<br>\nPod間でリソースの取り合いになる状況ではQoSクラスで優先度が決まり、低いものから強制終了される</li>\n</ul>\n</li>\n<li>\n<p>Liveness probe</p>\n<ul>\n<li>コンテナが生きているかを監視, /healthz pathにするのが慣例<br>\n起動直後のチェックで失敗する死のループを避ける必要がある</li>\n<li>gRPC probe<br>\ngrpc-health-probeツールを入れる</li>\n<li>\n<p>Readiness probe<br>\n一時的にリクエストを処理できない状況であることを、k8sに伝える  </p>\n<ul>\n<li><strong>このprobeが成功するまでk8sはこのPodにリクエストを送信しない</strong>  </li>\n<li><strong>必ずHTTP 200 OKのみを返すこと</strong>  </li>\n<li>/tmp/healtyのようなファイルでprobeする場合<br>\n<strong>ファイル削除することで一時的にサービスから外せる、障害調査時に役立つ</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># READYがPod内の準備できているコンテナ状況\n$ kubectl get pods\nNAME                    READY   STATUS    RESTARTS   AGE\ndemo-774d7f849b-kgwfh   1/1     Running   0          27d</code></pre></div>\n<ul>\n<li>\n<p>Pod Disruption Budget\n任意のタイミングで失っても構わないPod数を指定</p>\n<ul>\n<li>minAvairable</li>\n<li>maxUnavairable</li>\n</ul>\n</li>\n<li>\n<p>Namespace</p>\n<ul>\n<li>Namespaceの切り方、アプリケーション実行環境ごとなど</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> : 削除保護 <a href=\"https://tech.jxpress.net/entry/2019/12/01/kubernetes-admission-webhook-getting-started\">Validating Admission Webhook</a>、RBAC（アクセス制御）など</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> : 別のNamespaceのService同士は通信可能  【Network Policyでアクセス制御する必要ありそう】</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> : ResourceQuotaでNamespaceに対してのリソース制限ができる（した方が良い）</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> : LimitRange, デフォルトの制限をNamespaceに適用</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl get namespaces\nNAME              STATUS   AGE\ndefault           Active   28d\ndocker            Active   28d\nkube-node-lease   Active   28d\nkube-public       Active   28d\nkube-system       Active   28d\n$ kubectl get pods --namespace default\nNAME                    READY   STATUS    RESTARTS   AGE\ndemo-774d7f849b-kgwfh   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          27d\n\n<span class=\"token comment\"># Quota</span>\n$ kubectl create namespace demo\nnamespace/demo created\n\n$ <span class=\"token function\">cat</span> resourcequota.yaml \napiVersion: v1\nkind: List\nitems:\n- apiVersion: v1\n  kind: ResourceQuota\n  metadata:\n    name: pods-high\n  spec:\n    hard:\n      cpu: <span class=\"token string\">\"1000\"</span>\n      memory: 200Gi\n      pods: <span class=\"token string\">\"10\"</span>\n\n$ kubectl apply --namespace demo -f resourcequota.yaml \nresourcequota/pods-high created\n\n$ kubectl get resourcequotas -n demo\nNAME        CREATED AT\npods-high   <span class=\"token number\">2020</span>-03-23T08:39:40Z</code></pre></div>\n<ul>\n<li>\n<p>Pod最適化\nPrometheusやGrafanaを使用して、リソース状況を可視化し適切なリソース要求を実施すべし<br>\n通常の運用状態で使用する最大量より少し多い値に設定しておく  </p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> : Vertical Pod Autoscaler<br>\nリソース要求の理想的な値を算出するのに役立つ。<br>\n指定されたDeploymentを監視し、実際の使用量に基づいてPodのリソース要求を自動的に調整する。  </li>\n</ul>\n</li>\n<li>\n<p>ノードの最適化<br>\n経験則  </p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> : ノードは典型的なPodを少なくとも5つは実行できるサイズにする、10個~100個にする</li>\n</ul>\n</li>\n<li>\n<p>ストレージの最適化  </p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> : IOPS要求についてはKubernetesでサポートされていない。<br>\nコスト削減のためにできる限り容量とIOPSが小さいディスクボリュームをプロビジョンする</li>\n</ul>\n</li>\n<li>\n<p>使用率が低いリソースの発見<br>\n受信するトラフィックが極めて低いPodを発見する。<br>\nメトリクスを用いて使用率が低いPodを発見できる。  </p>\n<ul>\n<li>完了したJobのクリーンアップ<br>\nTTL機能がある。TTLAfterFinished Feature Gate</li>\n</ul>\n</li>\n<li>\n<p>プリエンプティブ(スポット)インスタンスの使用<br>\nクラスタにとってコスト削減の良い選択肢だが、<br>\n常に非プリエンプションノードを組み合わせて利用する。<br>\n理論上は全て一気に落ちる可能性もあるので。<br>\n(スポットインスタンスは落ちる前に通知くるけどうまく入れ替えできないのか？)</p>\n<ul>\n<li>Node Affinity<br>\n障害が許容できないPodをスポットにアサインしないようにできる</li>\n</ul>\n</li>\n<li>ワークロードバランスの維持<br>\nノード障害などでレプリカがあるノードに偏る可能性がある。<br>\nDeschedulerでクラスタを再バランス化するために最善を尽くしてくれる。  </li>\n</ul>\n<h1 id=\"6章-クラスタの運用\"><a href=\"#6%E7%AB%A0-%E3%82%AF%E3%83%A9%E3%82%B9%E3%82%BF%E3%81%AE%E9%81%8B%E7%94%A8\" aria-label=\"6章 クラスタの運用 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6章 クラスタの運用</h1>\n<ul>\n<li>\n<p>クラスタのサイジングとスケーリング</p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> : マネージドサービスならマスターノードの可用性は考えなくてOK</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> : ワーカーノードは最低2つは必要（AZ分散とかは勝手にやってくれるのか？）</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" disabled> : 最適なノードサイズはPod数やクラウドベンダなどで変わってくる  </p>\n<ul>\n<li>ノードが大きいほど一般的には割安になる</li>\n<li>異種混在ノード、大きなノード、小さなノードを用意して用途に応じて使い分ける方法もある</li>\n</ul>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" disabled> : スケールダウン<br>\n取り除きたいノードをドレイン指示する。Podは徐々に別ノードに移動する。  </p>\n<ul>\n<li>\n<p>PodDistruptionBudgetリソース  </p>\n<ul>\n<li>minAvailable<br>\n利用可能な状態を維持すべきPodの最小数</li>\n<li>maxUnavailable<br>\n任意の時点で利用できない状態が許されるPodの最大数</li>\n</ul>\n</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> : オートスケール、変動が激しいのでなければ使用するな、手作業でスケーリングする方がいい</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> : 適合性テスト<br>\nクラスタが適切に設定されて最新の状態である、ことを確認するツール Sonobuoy</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" disabled> : 【ユニットテスト Open Policy Agent】  </p>\n<ul>\n<li><a href=\"https://kenfdev.hateblo.jp/entry/2019/05/31/194614\">Conftest</a>というものでyamlにルールを定義できる。<br>\n別にk8sだけにしか使えないものではなさそう。</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> : 監査ロギング<br>\nクラスタAPIに対する全操作がログとして残る  </li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" disabled> : 【カオステスト】   </p>\n<ul>\n<li>chaos monkey\nspinnakerの利用が必須。argo CDでは使えないのか・・  </li>\n<li>pumba<br>\nコンテナレベルのchaos monkey</li>\n<li>Gremlin<br>\nFailure as a Service, あ、新しい・・<br>\nこれ使ってみたいかも</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"7章-kubernetesの強力なツール\"><a href=\"#7%E7%AB%A0-kubernetes%E3%81%AE%E5%BC%B7%E5%8A%9B%E3%81%AA%E3%83%84%E3%83%BC%E3%83%AB\" aria-label=\"7章 kubernetesの強力なツール permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7章 Kubernetesの強力なツール</h1>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> : 【マネージドサービスのマスターノードのログの見方は？】</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> : kubespy, クラスタ内の個別リソースを監視して何が起こるのかを表示できる。【使ってみたい】</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> : <a href=\"https://medium.com/@lestrrat/kubernetes%E4%BD%BF%E3%81%84%E3%81%AF%E5%85%A8%E5%93%A1-stern-%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%99%E3%81%B9%E3%81%8D-bc9d3eb2c321\">stern</a><br>\n高度なログストリーミングツール, 名前に一致する正規表現, コンテナ再起動でもストリーミング維持など</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> : <a href=\"https://qiita.com/go_vargo/items/df9084a080f66f9da0cc\">squash</a>, ライブデバッグ</li>\n</ul>\n<h2 id=\"kubectl\"><a href=\"#kubectl\" aria-label=\"kubectl permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>kubectl</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\">### リソースタイプ</span>\n$ kubectl api-resources\nNAME                              SHORTNAMES   APIGROUP                       NAMESPACED   KIND\nbindings                                                                      <span class=\"token boolean\">true</span>         Binding\ncomponentstatuses                 cs                                          <span class=\"token boolean\">false</span>        ComponentStatus\nconfigmaps                        cm                                          <span class=\"token boolean\">true</span>         ConfigMap\nendpoints                         ep                                          <span class=\"token boolean\">true</span>         Endpoints\nevents                            ev                                          <span class=\"token boolean\">true</span>         Event\nlimitranges                       limits                                      <span class=\"token boolean\">true</span>         LimitRange\nnamespaces                        ns                                          <span class=\"token boolean\">false</span>        Namespace\nnodes                             no                                          <span class=\"token boolean\">false</span>        Node\npersistentvolumeclaims            pvc                                         <span class=\"token boolean\">true</span>         PersistentVolumeClaim\npersistentvolumes                 <span class=\"token function\">pv</span>                                          <span class=\"token boolean\">false</span>        PersistentVolume\npods                              po                                          <span class=\"token boolean\">true</span>         Pod\n<span class=\"token punctuation\">..</span>.\n\n<span class=\"token comment\">### 詳細情報表示</span>\n$ kubectl get pods -o wide\n$ kubectl get pods -o json\n<span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"apiVersion\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"v1\"</span>,\n    <span class=\"token string\">\"items\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">\"apiVersion\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"v1\"</span>,\n            <span class=\"token string\">\"kind\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"Pod\"</span>,\n            <span class=\"token string\">\"metadata\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token string\">\"creationTimestamp\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"2020-02-24T08:18:54Z\"</span>,\n                <span class=\"token punctuation\">..</span>.\n$ kubectl get pods -o json <span class=\"token operator\">|</span> jq <span class=\"token string\">'.items[].metadata.name'</span>\n<span class=\"token string\">\"demo-774d7f849b-kgwfh\"</span>\n\n<span class=\"token comment\">### オブジェクトに関する記述</span>\n$ kubectl describe pods demo-774d7f849b-kgwfh\nName:           demo-774d7f849b-kgwfh\nNamespace:      default\nPriority:       <span class=\"token number\">0</span>\nNode:           docker-desktop/192.168.65.3\nStart Time:     Mon, <span class=\"token number\">24</span> Feb <span class=\"token number\">2020</span> <span class=\"token number\">17</span>:18:54 +0900\nLabels:         <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>demo\n                <span class=\"token assign-left variable\">environment</span><span class=\"token operator\">=</span>development\n                pod-template-hash<span class=\"token operator\">=</span>774d7f849b\nAnnotations:    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nStatus:         Running\nIP:             <span class=\"token number\">10.1</span>.0.16\nControlled By:  ReplicaSet/demo-774d7f849b\nContainers:\n  demo:\n    Container ID:   docker://7d7d8b76136913dfb93c46c0ed73a85ab09aef490860b4c288af0bbed8bb9552\n    Image:          cloudnatived/demo:hello\n    Image ID:       docker-pullable://cloudnatived/demo@sha256:aeae1e551a6cbd60bcfd56c3b4ffec732c45b8012b7cb758c6c4a34779e0e7fb\n    Port:           <span class=\"token number\">8888</span>/TCP\n    Host Port:      <span class=\"token number\">0</span>/TCP\n    State:          Running\n      Started:      Mon, <span class=\"token number\">24</span> Feb <span class=\"token number\">2020</span> <span class=\"token number\">17</span>:18:55 +0900\n    Ready:          True\n    Restart Count:  <span class=\"token number\">0</span>\n    Environment:\n      environment:  development\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from default-token-96xfm <span class=\"token punctuation\">(</span>ro<span class=\"token punctuation\">)</span>\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  default-token-96xfm:\n    Type:        Secret <span class=\"token punctuation\">(</span>a volume populated by a Secret<span class=\"token punctuation\">)</span>\n    SecretName:  default-token-96xfm\n    Optional:    <span class=\"token boolean\">false</span>\nQoS Class:       BestEffort\nNode-Selectors:  <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nTolerations:     node.kubernetes.io/not-ready:NoExecute <span class=\"token keyword\">for</span> 300s\n                 node.kubernetes.io/unreachable:NoExecute <span class=\"token keyword\">for</span> 300s\nEvents:          <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span></code></pre></div>\n<p>マニフェストではなく直接的にリソースを変更するコマンドが存在するが使用禁止。<br>\nGitOps！！</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\">### yamlとしてマニフェストを吐き出せる。</span>\n$ kubectl get deployments demo -o yaml\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: <span class=\"token string\">\"1\"</span>\n  creationTimestamp: <span class=\"token string\">\"2020-02-24T08:18:54Z\"</span>\n  generation: <span class=\"token number\">1</span>\n  name: demo\n  namespace: default\n  resourceVersion: <span class=\"token string\">\"29478\"</span>\n  selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/demo\n  uid: 9725c9b0-5a98-485a-b4a0-a52ffeee87c2\nspec:\n  progressDeadlineSeconds: <span class=\"token number\">600</span>\n  replicas: <span class=\"token number\">1</span>\n<span class=\"token punctuation\">..</span>.\n\n<span class=\"token comment\">### リソースの差分チェック</span>\n$ kubectl <span class=\"token function\">diff</span> -f hoge.yaml \n<span class=\"token function\">diff</span> -u -N /var/folders/d5/0kw6v0c52sn06yqpr168hgkh0000gn/T/LIVE-517569565/extensions.v1beta1.Deployment.default.demo /var/folders/d5/0kw6v0c52sn06yqpr168hgkh0000gn/T/MERGED-018551000/extensions.v1beta1.Deployment.default.demo\n--- /var/folders/d5/0kw6v0c52sn06yqpr168hgkh0000gn/T/LIVE-517569565/extensions.v1beta1.Deployment.default.demo  <span class=\"token number\">2020</span>-03-24 <span class=\"token number\">18</span>:53:51.000000000 +0900\n+++ /var/folders/d5/0kw6v0c52sn06yqpr168hgkh0000gn/T/MERGED-018551000/extensions.v1beta1.Deployment.default.demo        <span class=\"token number\">2020</span>-03-24 <span class=\"token number\">18</span>:53:51.000000000 +0900\n@@ -4,7 +4,10 @@\n   annotations:\n     deployment.kubernetes.io/revision: <span class=\"token string\">\"1\"</span>\n   creationTimestamp: <span class=\"token string\">\"2020-02-24T08:18:54Z\"</span>\n-  generation: <span class=\"token number\">1</span>\n+  generation: <span class=\"token number\">2</span>\n+  labels:\n+    app: demo\n+    environment: development\n   name: demo\n   namespace: default\n   resourceVersion: <span class=\"token string\">\"29478\"</span>\n@@ -12,7 +15,7 @@\n   uid: 9725c9b0-5a98-485a-b4a0-a52ffeee87c2\n spec:\n   progressDeadlineSeconds: <span class=\"token number\">600</span>\n-  replicas: <span class=\"token number\">1</span>\n+  replicas: <span class=\"token number\">2</span>\n   revisionHistoryLimit: <span class=\"token number\">10</span>\n   selector:\n     matchLabels:\n<span class=\"token builtin class-name\">exit</span> status <span class=\"token number\">1</span>\n\n<span class=\"token comment\">### コンテナのログをみる</span>\nkubectl logs  --tail<span class=\"token operator\">=</span><span class=\"token number\">20</span> demo-774d7f849b-kgwfh\n\n<span class=\"token comment\">## リソースの差分チェック</span>\n$ kubectl <span class=\"token function\">diff</span> -f hoge.yaml \n<span class=\"token function\">diff</span> -u -N /var/folders/d5/0kw6v0c52sn06yqpr168hgkh0000gn/T/LIVE-517569565/extensions.v1beta1.Deployment.default.demo /var/folders/d5/0kw6v0c52sn06yqpr168hgkh0000gn/T/MERGED-018551000/extensions.v1beta1.Deployment.default.demo\n--- /var/folders/d5/0kw6v0c52sn06yqpr168hgkh0000gn/T/LIVE-517569565/extensions.v1beta1.Deployment.default.demo  <span class=\"token number\">2020</span>-03-24 <span class=\"token number\">18</span>:53:51.000000000 +0900\n+++ /var/folders/d5/0kw6v0c52sn06yqpr168hgkh0000gn/T/MERGED-018551000/extensions.v1beta1.Deployment.default.demo        <span class=\"token number\">2020</span>-03-24 <span class=\"token number\">18</span>:53:51.000000000 +0900\n@@ -4,7 +4,10 @@\n   annotations:\n     deployment.kubernetes.io/revision: <span class=\"token string\">\"1\"</span>\n   creationTimestamp: <span class=\"token string\">\"2020-02-24T08:18:54Z\"</span>\n-  generation: <span class=\"token number\">1</span>\n+  generation: <span class=\"token number\">2</span>\n+  labels:\n+    app: demo\n+    environment: development\n   name: demo\n   namespace: default\n   resourceVersion: <span class=\"token string\">\"29478\"</span>\n@@ -12,7 +15,7 @@\n   uid: 9725c9b0-5a98-485a-b4a0-a52ffeee87c2\n spec:\n   progressDeadlineSeconds: <span class=\"token number\">600</span>\n-  replicas: <span class=\"token number\">1</span>\n+  replicas: <span class=\"token number\">2</span>\n   revisionHistoryLimit: <span class=\"token number\">10</span>\n   selector:\n     matchLabels:\n<span class=\"token builtin class-name\">exit</span> status\n\n<span class=\"token comment\">### コンテナのログをみる</span>\n$ kubectl logs  --tail<span class=\"token operator\">=</span><span class=\"token number\">20</span> demo-774d7f849b-kgwfh\n<span class=\"token comment\"># --since, --timestampsなどあり</span>\n\n<span class=\"token comment\">### コンテナへのアタッチ</span>\n<span class=\"token comment\"># 直接ログをコンテナにアタッチして見る。</span>\nkubectl attach demo-774d7f849b-kgwfh\n\n<span class=\"token comment\">### Context</span>\n$ kubectl config get-contexts\nCURRENT   NAME                 CLUSTER          AUTHINFO         NAMESPACE\n*         docker-desktop       docker-desktop   docker-desktop   \n          docker-for-desktop   docker-desktop   docker-desktop  \n\n$ kubectl cluster-info\nKubernetes master is running at https://kubernetes.docker.internal:6443\nKubeDNS is running at https://kubernetes.docker.internal:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy\n\n$ kubectl config use-context docker-for-desktop\nSwitched to context <span class=\"token string\">\"docker-for-desktop\"</span><span class=\"token builtin class-name\">.</span>\n$ kubectl config get-contexts\nCURRENT   NAME                 CLUSTER          AUTHINFO         NAMESPACE\n          docker-desktop       docker-desktop   docker-desktop   \n*         docker-for-desktop   docker-desktop   docker-desktop\n\n$ kubectl config set-context myapp --cluster<span class=\"token operator\">=</span>gke --namemspace<span class=\"token operator\">=</span>myapp</code></pre></div>\n<h2 id=\"busybox\"><a href=\"#busybox\" aria-label=\"busybox permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>busybox</h2>\n<p>色々な調査でコンテナと同じネットワーク上に配置してhogehogeするときに便利。  </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl run busybox --image<span class=\"token operator\">=</span>busybox:1.28 --rm -it --restart<span class=\"token operator\">=</span>Never /bin/sh</code></pre></div>\n<h1 id=\"8章-コンテナの実行\"><a href=\"#8%E7%AB%A0-%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%81%AE%E5%AE%9F%E8%A1%8C\" aria-label=\"8章 コンテナの実行 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8章 コンテナの実行</h1>\n<h2 id=\"pod-1\"><a href=\"#pod-1\" aria-label=\"pod 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pod</h2>\n<ul>\n<li>k8sのスケジューリングの単位</li>\n<li>\n<p>Pod内に複数のコンテナが存在し得る</p>\n<ul>\n<li>一緒にしないと正常に動作しないのであればPodでまとめる</li>\n</ul>\n</li>\n<li>ダイジェストを利用すると必ずイメージを固定して使える</li>\n<li>securityContext: runAsUser, で非rootユーザとして実行</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> : readOnlyRootFilesystemをtrueにしておく</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> : alllowPrivilegeEscalationをfalseにしておく</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> : ケイパビリティは必要なものだけ付与する</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> : PodSecurityPolicyでクラスタ全てにセキュリティポリシーをアタッチできる</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> : 再起動ポリシ, restartPolicy: OnFailure</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 複数コンテナを指定できる</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> demo\n        <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> cloudnatived/demo<span class=\"token punctuation\">:</span>hello\n        <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8888</span></code></pre></div>\n<ul>\n<li>\n<p>ボリューム</p>\n<ul>\n<li>\n<p>emptyDirボリューム  </p>\n<ul>\n<li>Pod内での共有は可能<br>\nただし、ロック機構がないのでnfsなど使う必要がある</li>\n<li>Pod削除で消去される一時ボリューム</li>\n</ul>\n</li>\n<li>\n<p>永続ボリューム</p>\n<ul>\n<li>ステートフルになるのでだめ</li>\n<li>KubernetesでDBを実行することは非推奨</li>\n<li>PersistentVolume, は基本使うな</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"9章-podの管理\"><a href=\"#9%E7%AB%A0-pod%E3%81%AE%E7%AE%A1%E7%90%86\" aria-label=\"9章 podの管理 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>9章 Podの管理</h1>\n<h2 id=\"label\"><a href=\"#label\" aria-label=\"label permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Label</h2>\n<ul>\n<li>Label自体はユーザ用のタグ付けに過ぎない, リソースを識別する</li>\n<li>app, environment, version, roleなどをつける</li>\n</ul>\n<h2 id=\"セレクタ\"><a href=\"#%E3%82%BB%E3%83%AC%E3%82%AF%E3%82%BF\" aria-label=\"セレクタ permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>セレクタ</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl get pods --show-labels\nNAME                    READY   STATUS    RESTARTS   AGE   LABELS\ndemo-774d7f849b-kgwfh   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          29d   <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>demo,environment<span class=\"token operator\">=</span>development,pod-template-hash<span class=\"token operator\">=</span>774d7f849b\n\n<span class=\"token comment\"># セレクタで一致条件を記述して結果を絞る</span>\n$ kubectl get pods -l <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>demo\nNAME                    READY   STATUS    RESTARTS   AGE\ndemo-774d7f849b-kgwfh   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          29d\n\n<span class=\"token comment\"># !=</span>\n$ kubectl get pods -l app<span class=\"token operator\">!=</span>demo2\nNAME                    READY   STATUS    RESTARTS   AGE\ndemo-774d7f849b-kgwfh   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          29d\n\n<span class=\"token comment\"># in 集合</span>\n$ kubectl get pods -l <span class=\"token string\">\"environment in (development)\"</span>\nNAME                    READY   STATUS    RESTARTS   AGE\ndemo-774d7f849b-kgwfh   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          29d\n\n$ kubectl get pods -l <span class=\"token string\">\"environment notin (staging)\"</span>\nNAME                    READY   STATUS    RESTARTS   AGE\ndemo-774d7f849b-kgwfh   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          29d</code></pre></div>\n<h2 id=\"node-affinity\"><a href=\"#node-affinity\" aria-label=\"node affinity permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Node Affinity</h2>\n<p>【この設定だいぶ大変だな。。割り当てのされ方を考えつつノードに割り当てるのか・・、ノウハウ必要】</p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> : Pod Affinityが必須な場合をのぞいて使わない方がいい</li>\n<li>required, prefferdがある</li>\n<li>\n<p>ハードAffinity  </p>\n<ul>\n<li>特定のAZを指定して、Podがそのゾーンのみにスケジューリングされるようにする</li>\n</ul>\n</li>\n<li>\n<p>ソフトAffinity  </p>\n<ul>\n<li>weightを1から100までの数値で指定してスケジュール先の優先度を決定する</li>\n</ul>\n</li>\n<li>Podの同居\npodAffinity: WebサーバーPodとRedis Podの同居を指定するなど<br>\n余計なネットワーク経由の通信が発生しないメリットがある<br>\nソフト・ハードどちらも指定できる  </li>\n<li>Podの分離<br>\npodAntiAffinity: serverのノード間分散を行いたいようなケース</li>\n</ul>\n<h2 id=\"taint-toleration\"><a href=\"#taint-toleration\" aria-label=\"taint toleration permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Taint, Toleration</h2>\n<p>【試してみる】</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># テスト用に新しくnamespaceを切る</span>\n$ kubectl create namespace fortaint\nnamespace/fortaint created\n\n<span class=\"token comment\"># Nodeのtaint状態</span>\n$ kubectl describe node docker-desktop <span class=\"token operator\">|</span><span class=\"token function\">grep</span> Taint\nTaints:             <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n\n<span class=\"token comment\"># Taint追加</span>\n<span class=\"token comment\"># Taintを追加すると、 dedicated=trueが容認(Toleration)されているPodしかNodeに割り当てできなくなる</span>\n$ kubectl taint nodes docker-desktop <span class=\"token assign-left variable\">dedicated</span><span class=\"token operator\">=</span>true:NoSchedule\nnode/docker-desktop tainted\n\n<span class=\"token comment\"># Taintが設定されている</span>\n$ kubectl describe node docker-desktop <span class=\"token operator\">|</span><span class=\"token function\">grep</span> Taint\nTaints:             <span class=\"token assign-left variable\">dedicated</span><span class=\"token operator\">=</span>true:NoSchedule\n\n<span class=\"token comment\"># fortaint namespaceでdemo Podを作成</span>\n$ kubectl apply --namespace fortaint -f deployment.yaml \ndeployment.apps/demo created\n\n<span class=\"token comment\"># Taintのせいでスケジュールできない！</span>\n$ kubectl describe pod demo -n fortaint <span class=\"token operator\">|</span><span class=\"token function\">grep</span> -A <span class=\"token number\">10</span> Events\nEvents:\n  Type     Reason            Age                  From               Message\n  ----     ------            ----                 ----               -------\n  Warning  FailedScheduling  70s <span class=\"token punctuation\">(</span>x2 over 2m22s<span class=\"token punctuation\">)</span>  default-scheduler  <span class=\"token number\">0</span>/1 nodes are available: <span class=\"token number\">1</span> node<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> had taints that the pod didn<span class=\"token punctuation\">\\</span>'t tolerate.\n\n<span class=\"token comment\"># Taintの設定をyamlに追加</span>\n<span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span> EOS <span class=\"token operator\">>></span> deployment.yaml\n      tolerations:\n      - key: <span class=\"token string\">\"dedicated\"</span>\n        operator: <span class=\"token string\">\"Equal\"</span>\n        value: <span class=\"token string\">\"true\"</span>\n        effect: <span class=\"token string\">\"NoSchedule\"</span>\nEOS\n\n<span class=\"token comment\"># applyする</span>\n$ kubectl apply --namespace fortaint -f deployment.yaml \ndeployment.apps/demo configured\n$ kubectl describe pod demo -n fortaint <span class=\"token operator\">|</span><span class=\"token function\">grep</span> -A <span class=\"token number\">10</span> Events\nEvents:\n  Type    Reason     Age   From                     Message\n  ----    ------     ----  ----                     -------\n  Normal  Scheduled  7s    default-scheduler        Successfully assigned fortaint/demo-85c9b4589b-dg9vm to docker-desktop\n  Normal  Pulled     6s    kubelet, docker-desktop  Container image <span class=\"token string\">\"cloudnatived/demo:hello\"</span> already present on machine\n  Normal  Created    6s    kubelet, docker-desktop  Created container demo\n  Normal  Started    6s    kubelet, docker-desktop  Started container demo\n\n<span class=\"token comment\"># ノードにスケジュールされてdemo Podが起動した</span>\n$ kubectl get pods -n fortaint\nNAME                    READY   STATUS    RESTARTS   AGE\ndemo-85c9b4589b-dg9vm   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          26s\n\n<span class=\"token comment\"># Taint設定を削除しておく</span>\n$ kubectl taint nodes docker-desktop dedicated:NoSchedule-\nnode/docker-desktop untainted</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"yaml:deployment.yaml\"><pre class=\"language-yaml:deployment.yaml\"><code class=\"language-yaml:deployment.yaml\">apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: demo\n  labels:\n    app: demo\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: demo\n  template:\n    metadata:\n      labels:\n        app: demo\n    spec:\n      containers:\n      - name: demo\n        image: cloudnatived/demo:hello\n        ports:\n        - containerPort: 8888</code></pre></div>\n<h2 id=\"podコントローラ\"><a href=\"#pod%E3%82%B3%E3%83%B3%E3%83%88%E3%83%AD%E3%83%BC%E3%83%A9\" aria-label=\"podコントローラ permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Podコントローラ</h2>\n<p>【実際にやってみないと本番で使えるのかわからないな】</p>\n<ul>\n<li>ReplicaSet<br>\n既出、Podについてレプリカのグループを管理する<br>\n同じ仕様のPodのレプリカ数を管理\nDeploymentによって生成・管理されて、バージョン差分が発生すると新しいReplicaSetの作成が行われる</li>\n<li>DaemonSet\n利用例：ロギングエージェント<br>\nロギングエージェントとして機能する追加コンテナを全てのPodで実行する（サイドカー）  </li>\n<li>StatefulSet\n利用例：Redis, MongoDB, Cassandra<br>\n【ステートフルなものは使いたくはない、データ消えそうで怖い】</li>\n<li>\n<p>Job<br>\n利用例:バッチ処理タスク、キューワーカ  </p>\n<ul>\n<li>CronJob</li>\n</ul>\n</li>\n<li>Horizontal Pod AutoScaler<br>\nメトリクスを監視して、レプリカ数の増減の判断を自動で行う<br>\n【ECSよりも柔軟にメトリクス定義でオートスケールできそう、メモリ使用率やアプリケーションからのメトリクス利用可能】</li>\n<li>PodPreset<br>\n【Secret、Volume、VolumeMountや環境変数など、特定の情報を注入するためのオブジェクト】</li>\n<li>\n<p>Operator, Custom Resource Definition(CRD)<br>\n【むず・・, <a href=\"https://qiita.com/cvusk/items/773e222e0971a5391a51\">https://qiita.com/cvusk/items/773e222e0971a5391a51</a> わかりやすい！！】 </p>\n<ul>\n<li>\n<p>Custome Controller<br>\nCustom Resourceを操作するためのコントローラ  </p>\n<ul>\n<li>clint-goで実装</li>\n<li>code-generatorは、kubernetes styled APIを生成する</li>\n</ul>\n</li>\n<li>CRD\nCustom Resourceを定義する</li>\n<li>Operator\nK8s環境を監視し、その現在の状態を使用して数ミリ秒で意思決定を行うソフトウェアベンダーのエンジニアリングチームのようなもの\n【わかりやすい、<a href=\"https://qiita.com/MahoTakara/items/af4ad8ab69c24102bd72%E3%80%91\">https://qiita.com/MahoTakara/items/af4ad8ab69c24102bd72】</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"ingressリソース\"><a href=\"#ingress%E3%83%AA%E3%82%BD%E3%83%BC%E3%82%B9\" aria-label=\"ingressリソース permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ingressリソース</h2>\n<p>Service前段のロードバランサ</p>\n<ul>\n<li>ファンアウト、ルールに応じた、トラフィックの転送</li>\n<li>TLS終端</li>\n<li>Ingressコントローラ、ALBやGLBCでリクエストを待ち受ける</li>\n</ul>\n<h2 id=\"istio\"><a href=\"#istio\" aria-label=\"istio permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Istio</h2>\n<p>オライリーから Istio: Up and Runningという本が出たと書いてある。<br>\n一冊の本が必要な内容量ということ</p>\n<ul>\n<li>トラフィック制御</li>\n<li>対障害性処理</li>\n<li>可視化、分散トレース</li>\n<li>認証、セキュリティ機能</li>\n</ul>\n<h2 id=\"envoy\"><a href=\"#envoy\" aria-label=\"envoy permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Envoy</h2>\n<p>高性能なプロキシ。<br>\nALBなどのマネージドサービスの自由度では足りないケースで利用する</p>\n<h1 id=\"10章-設定と機密情報\"><a href=\"#10%E7%AB%A0-%E8%A8%AD%E5%AE%9A%E3%81%A8%E6%A9%9F%E5%AF%86%E6%83%85%E5%A0%B1\" aria-label=\"10章 設定と機密情報 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>10章 設定と機密情報</h1>\n<h2 id=\"configmap\"><a href=\"#configmap\" aria-label=\"configmap permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ConfigMap</h2>\n<p>設定データを保存するための主要なオブジェクト。<br>\nConfigMapからファイルや環境変数経由で設定データをアプリケーションに共有できる。<br>\nenvFromを用いることで一括で環境変数を設定することができる。  </p>\n<p>【GitOpsの観点からローカルPCの環境変数を引き渡すようなことはしない方が良さそう】<br>\n【Argo CDだとこの設定ファイルの変更も捉えてDeploymentのスペックを更新して、Podの再起動できるのか？】<br>\n【Argoについては13章をみてください】</p>\n<h2 id=\"secret\"><a href=\"#secret\" aria-label=\"secret permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Secret</h2>\n<p>ConfigMapと同じような設定の仕方だがログやdescribeで値は表示されない。<br>\n保存データは暗号化されており、RBACでアクセス制御を適切に行う。  </p>\n<h3 id=\"機密情報管理の戦略\"><a href=\"#%E6%A9%9F%E5%AF%86%E6%83%85%E5%A0%B1%E7%AE%A1%E7%90%86%E3%81%AE%E6%88%A6%E7%95%A5\" aria-label=\"機密情報管理の戦略 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>機密情報管理の戦略</h3>\n<p>マニフェストファイルは平文で書かれているのでGit管理するのはとても危険。<br>\n機密データはどのように管理すべきか？<br>\n【GitOpsするならSOPSで暗号化したファイルをGit管理＋デプロイ時に複合するのが良さそう】  </p>\n<ul>\n<li>\n<p>バージョン管理を通じた機密情報の暗号化  </p>\n<ul>\n<li>暗号化してコミットし、デプロイ時に複合化する  </li>\n<li>オペミスによる平文のコミットなどの危険性は残る  </li>\n<li>様々な案件で同じ機密情報を管理する場合、それぞれでコピペが発生する</li>\n</ul>\n</li>\n<li>\n<p>リモート保存  </p>\n<ul>\n<li>S3などのセキュアなファイルストレージに格納する  </li>\n<li>【GitOpsの文脈だと、全てがGitでバージョン管理され、ログが取られていないのでだめでは？】</li>\n</ul>\n</li>\n<li>\n<p>専用ツール\nCDツールのArgo自体は機密データの専用ツールを提供していない  </p>\n<ul>\n<li>Hashicorp Vault<br>\nいきなり利用することは推奨されないらしい<br>\n管理が必要な機密情報はそう多くないかもしれない</li>\n<li>\n<p>SOPS  </p>\n<ul>\n<li>軽量暗号化ツール</li>\n<li>Azure Key Vault, KMS, Cloud KMSなどのクラウドの暗号化バックエンドをサポート</li>\n</ul>\n</li>\n<li>helm-secrets\nhelmで利用できる暗号・複合化プラグイン<br>\n内部ではSOPSを利用している</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"11章-セキュリティとバックアップ\"><a href=\"#11%E7%AB%A0-%E3%82%BB%E3%82%AD%E3%83%A5%E3%83%AA%E3%83%86%E3%82%A3%E3%81%A8%E3%83%90%E3%83%83%E3%82%AF%E3%82%A2%E3%83%83%E3%83%97\" aria-label=\"11章 セキュリティとバックアップ permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>11章 セキュリティとバックアップ</h1>\n<h2 id=\"アクセス制御\"><a href=\"#%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E5%88%B6%E5%BE%A1\" aria-label=\"アクセス制御 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>アクセス制御</h2>\n<ul>\n<li>\n<p>stagingとproductionでアクセス権限を分けたい</p>\n<ul>\n<li>stagingとproductionのクラスタを分ける</li>\n<li>クラスタごとに権限を分ける</li>\n</ul>\n</li>\n<li>RBAC(Role-Based Acess Control)\n特定のパーミッションを特定のユーザに与える</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># RBAC設定されている</span>\n$ kubectl describe pod  -n kube-system <span class=\"token operator\">|</span><span class=\"token function\">grep</span> RBAC\n      --authorization-mode<span class=\"token operator\">=</span>Node,RBAC</code></pre></div>\n<p>【適切な設定はノウハウが必要そう、実戦で頑張る】</p>\n<ul>\n<li>\n<p>ロール</p>\n<ul>\n<li>namespace, クラスタ全体を対象として指定可能</li>\n<li>\n<p>cluster-role<br>\n管理者</p>\n<ul>\n<li>インターネット公開される可能性のあるDashboardなどに与えてはならない</li>\n</ul>\n</li>\n<li>view</li>\n<li>edit\n新しいロールやパーミッションを与えることはできない\nCDツールに適用するロールはedit</li>\n</ul>\n</li>\n<li>\n<p>ロールバインディング\nユーザにロールをバインディングする</p>\n<h2 id=\"セキュリティスキャン\"><a href=\"#%E3%82%BB%E3%82%AD%E3%83%A5%E3%83%AA%E3%83%86%E3%82%A3%E3%82%B9%E3%82%AD%E3%83%A3%E3%83%B3\" aria-label=\"セキュリティスキャン permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>セキュリティスキャン</h2>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> : Clair, 【Trivy】, 【anchore】\nコンテナスキャナ、安全でないソフトウェアのスキャンをしてくれる</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> : 【Harbor】\nk8s上で運用できるリポジトリ、コンテナイメージの脆弱性チェックつき</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> : 【falco】\n侵入検知・異常検知のOSS</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> : 【sysdig】\n統合的なセキュリティ・モニタリングプラットフォーム</li>\n</ul>\n<h2 id=\"バックアップ\"><a href=\"#%E3%83%90%E3%83%83%E3%82%AF%E3%82%A2%E3%83%83%E3%83%97\" aria-label=\"バックアップ permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>バックアップ</h2>\n<ul>\n<li>etcdのバックアップ（マネージドなら不要）</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> : Velero\n<a href=\"https://blog.stormcat.io/post/velero-backup/\">https://blog.stormcat.io/post/velero-backup/</a>\nクラスタの状態と永続データをバックアップしてS3などに配置する、復元も可能<br>\n障害時に慌てないように定期的な復元テストを実施するべき</li>\n</ul>\n<h2 id=\"【ストレージ】\"><a href=\"#%E3%80%90%E3%82%B9%E3%83%88%E3%83%AC%E3%83%BC%E3%82%B8%E3%80%91\" aria-label=\"【ストレージ】 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>【ストレージ】</h2>\n<ul>\n<li>Rook\nストレージを提供する\n<a href=\"https://qiita.com/ysakashita/items/f27c0948b4e339c5d1e0\">https://qiita.com/ysakashita/items/f27c0948b4e339c5d1e0</a></li>\n</ul>\n<h2 id=\"ステータス監視\"><a href=\"#%E3%82%B9%E3%83%86%E3%83%BC%E3%82%BF%E3%82%B9%E7%9B%A3%E8%A6%96\" aria-label=\"ステータス監視 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ステータス監視</h2>\n<h3 id=\"kubectl-1\"><a href=\"#kubectl-1\" aria-label=\"kubectl 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>kubectl</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># コントロールプレーン</span>\n$ kubectl get componentstatuses\nNAME                 STATUS    MESSAGE             ERROR\ncontroller-manager   Healthy   ok                  \nscheduler            Healthy   ok                  \netcd-0               Healthy   <span class=\"token punctuation\">{</span><span class=\"token string\">\"health\"</span><span class=\"token builtin class-name\">:</span><span class=\"token string\">\"true\"</span><span class=\"token punctuation\">}</span>  \n<span class=\"token comment\"># ノード</span>\n<span class=\"token comment\"># NotReadyだと異常</span>\n$ kubectl get nodes\nNAME             STATUS   ROLES    AGE   VERSION\ndocker-desktop   Ready    master   32d   v1.15.5\n\n$ kubectl get pods --all-namespaces\nNAMESPACE     NAME                                     READY   STATUS    RESTARTS   AGE\ndefault       demo-774d7f849b-kgwfh                    <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          31d\ndocker        compose-7b7c5cbbcc-jsgv9                 <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          32d\ndocker        compose-api-dbbf7c5db-p8swb              <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          32d\nfortaint      demo-85c9b4589b-dg9vm                    <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          43h\nhoge          demo-64f9f8d47d-7v9qk                    <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          43h\nkube-system   coredns-5c98db65d4-cn9kx                 <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">1</span>          32d\nkube-system   coredns-5c98db65d4-tl66p                 <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">1</span>          32d\nkube-system   etcd-docker-desktop                      <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          32d\nkube-system   kube-apiserver-docker-desktop            <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          32d\nkube-system   kube-controller-manager-docker-desktop   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">12</span>         32d\nkube-system   kube-proxy-hsq45                         <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          32d\nkube-system   kube-scheduler-docker-desktop            <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">21</span>         32d</code></pre></div>\n<ul>\n<li>クラウドプロバイダ のコンソール</li>\n<li>K8s Dashboard</li>\n<li>\n<p>モニタリングツール</p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> : Prometheus+Graphana\n【圧倒的に利用されている印象、監視はこれ一択では？】</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> : Weave Scope\nクラスタ・コンテナの視覚化・操作ができるのが有能みたい<br>\n【ArgoでもPodまでは可視化できるしDashboardでも可視化できるがこいつが差別化する機能を持っているのか？】</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"12章-kubernetesアプリケーションのデプロイ\"><a href=\"#12%E7%AB%A0-kubernetes%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4\" aria-label=\"12章 kubernetesアプリケーションのデプロイ permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>12章 Kubernetesアプリケーションのデプロイ</h1>\n<p>生のYAMLファイルだと、変数の取り扱いが厳しい。<br>\nHelmはこれを解決するための手段。  </p>\n<ul>\n<li>\n<p>Helmチャート</p>\n<ul>\n<li>テンプレート</li>\n<li>\n<p>【Argo CDでのHelmの取り扱いについては別途まとめる】</p>\n<ul>\n<li>デフォルト値を上書きするためのyamlを準備する？  </li>\n<li>helm upgradeはArgoの方で勝手に面倒みてくれる？</li>\n<li>\n<p>secrets+helmの取り扱い, Argo CDではsecretsの機能は個別で持っていない</p>\n<ul>\n<li>helm-secrets</li>\n</ul>\n</li>\n<li>HelmfilemとArgoの使い合わせはできる？</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"13章-開発ワークフロー\"><a href=\"#13%E7%AB%A0-%E9%96%8B%E7%99%BA%E3%83%AF%E3%83%BC%E3%82%AF%E3%83%95%E3%83%AD%E3%83%BC\" aria-label=\"13章 開発ワークフロー permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>13章 開発ワークフロー</h1>\n<h1 id=\"14章-kubernetesにおける継続的デプロイ\"><a href=\"#14%E7%AB%A0-kubernetes%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B%E7%B6%99%E7%B6%9A%E7%9A%84%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4\" aria-label=\"14章 kubernetesにおける継続的デプロイ permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>14章 Kubernetesにおける継続的デプロイ</h1>\n<p>13,14章は内容が似ているのでまとめる。<br>\n開発ツールの前に、GitOpsについて考えをまとめる。CI/CDは本ではなくほぼ自分で調べた内容です。<br>\n本の内容は少し古そうです。  </p>\n<p>CDツールはOSSのみまとめる。  </p>\n<h2 id=\"【gitops】\"><a href=\"#%E3%80%90gitops%E3%80%91\" aria-label=\"【gitops】 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>【<a href=\"https://cdn-ak.f.st-hatena.com/images/fotolife/b/bobchan1915/20181206/20181206044001.png\">GitOps</a>】</h2>\n<p><img src=\"https://cdn-ak.f.st-hatena.com/images/fotolife/b/bobchan1915/20181206/20181206044001.png\"></p>\n<h3 id=\"gitopsとは？\"><a href=\"#gitops%E3%81%A8%E3%81%AF%EF%BC%9F\" aria-label=\"gitopsとは？ permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GitOpsとは？</h3>\n<p>自分の理解 <strong>インフラもアプリと同じように全ての設定・変更がGit管理され、Gitの変更がそのままクラスタに同期されるべき、と言う考え方</strong></p>\n<p>この考えに乗っかると、</p>\n<ul>\n<li>NG: 手動でkubectl applyやhelmの更新などをする</li>\n<li>NG: secret情報をS3で管理する（Gitでのバージョン管理はされなくなるため）</li>\n</ul>\n<p>で、Gitファイル状態 = 本番状態、を実現できるのであればArgo CDを使おうと、Circle CIで全部無理やり自作で作り込もうとどちらでもGitOpsである  </p>\n<h3 id=\"gitopsツールはなんで必要？\"><a href=\"#gitops%E3%83%84%E3%83%BC%E3%83%AB%E3%81%AF%E3%81%AA%E3%82%93%E3%81%A7%E5%BF%85%E8%A6%81%EF%BC%9F\" aria-label=\"gitopsツールはなんで必要？ permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GitOpsツールはなんで必要？</h3>\n<p>Argo CDのようにGitの設定ファイル = 本番状態に特化して、デプロイを担当する機能を持つCDツールを使うとGitOpsが実現しやすい。\nArgo CDはあくまでk8sのCDに特化しており、CI（テスト、build）は専門外。<br>\nなのでGithub actionsなどと組み合わせて利用する事になる。<br>\n一応Argo CIというプロジェクトもあるがまだ開発中。</p>\n<h4 id=\"argo-cdの特徴\"><a href=\"#argo-cd%E3%81%AE%E7%89%B9%E5%BE%B4\" aria-label=\"argo cdの特徴 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Argo CDの特徴</h4>\n<ul>\n<li>カナリア/BGデプロイ、ロールバック（好きな時点のGit状態にロールバック）\nmaxSurgeやmaxUnnavailableの設定はどうやるのか？</li>\n<li>helmや様々なartifactの利用（特定のツール特化でCDを作り込まなくて良い）</li>\n<li>複数クラスタ管理</li>\n<li>RBACポリシーの扱い</li>\n<li>アプリケーションリソースの健康状態のチェック\n【他の監視ツールとの使い分けどうする？】</li>\n<li>Drift Detection、つまりGit状態と本番で差異があれば検知・可視化</li>\n<li>UI付き</li>\n<li>CIツールと組み合わせて使うためのCLI付き</li>\n<li>Webhook(GitHub, etc..)</li>\n<li>Access tokens</li>\n<li>PreSync, Sync, PostSync hooks</li>\n<li>APIなどの監査ログ</li>\n<li>Prometheusメトリクス</li>\n<li>パラメータ overrides</li>\n</ul>\n<p>他にも、Argo workflow, UI, CI, Eventsなどプロジェクトが走っている。  </p>\n<h4 id=\"tekton-pipelines（cicd）\"><a href=\"#tekton-pipelines%EF%BC%88cicd%EF%BC%89\" aria-label=\"tekton pipelines（cicd） permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tekton pipelines（CI/CD）</h4>\n<p>knative用のpipelineツール。k8sで使うときにどのくらい便利なのかよく分からなかった。\nknative自体はとても興味があるのでいつかまとめる。  </p>\n<h4 id=\"jenkins-x\"><a href=\"#jenkins-x\" aria-label=\"jenkins x permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Jenkins X</h4>\n<p>全然調べてないがGitOps用のツール</p>\n<h3 id=\"spinnaker\"><a href=\"#spinnaker\" aria-label=\"spinnaker permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>spinnaker</h3>\n<p>歴史があるツール。個人的にはArgoの方が将来性があると感じた。<br>\nCIが中心のops、CIops。<br>\nマージ → コンテナbuild → レジストリ更新 → レジストリ更新トリガ, spinnakerがコンテナをデプロイ  </p>\n<ul>\n<li>2年リリースがない、これは大丈夫か</li>\n<li>k8s専用のCDツールではないので複雑</li>\n<li>調べた限りだと不安定な部分があるらしい(試してないので参考程度でお願いします)</li>\n<li>GitOpsではない</li>\n</ul>\n<h3 id=\"skaffold\"><a href=\"#skaffold\" aria-label=\"skaffold permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>skaffold</h3>\n<p>ファイルを監視して、build → 本番（ローカルも可能）にapplyするツール<br>\n個人的には要らない、GitOpsでもないしファイル変更で本番反映されたら怖い。<br>\nちゃんと調べてないが用途がよくわかってない・・</p>\n<h3 id=\"jenkins\"><a href=\"#jenkins\" aria-label=\"jenkins permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Jenkins</h3>\n<p>ない</p>\n<h1 id=\"15章-オブザーバビリティと監視\"><a href=\"#15%E7%AB%A0-%E3%82%AA%E3%83%96%E3%82%B6%E3%83%BC%E3%83%90%E3%83%93%E3%83%AA%E3%83%86%E3%82%A3%E3%81%A8%E7%9B%A3%E8%A6%96\" aria-label=\"15章 オブザーバビリティと監視 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>15章 オブザーバビリティと監視</h1>\n<p>ツールを入れて収集して満足せず、事実とフィードバックに基づくエンジニアリング文化を醸成し、<br>\n組織全体に適用していくことが重要。的なことが書かれていて確かに、と思った。  </p>\n<ul>\n<li>\n<p>ブラックボックス監視\nシステムの外側から見える挙動を観察する。内部には踏み込まない。<br>\npingやcurlで応答を確認する。  </p>\n<ul>\n<li>予測可能で外部に露出する部分しか監視できない</li>\n<li>問題が発生した後でしか通知されない</li>\n<li>何が壊れているかわかるが、なぜ壊れているかは不明</li>\n</ul>\n</li>\n<li>\n<p>アップ\nアップタイム99.99...%、ユーザがハッピーでなければ9の数に意味はありません、痺れる言葉ですね  </p>\n<ul>\n<li>分散システムは完全な意味でアップとなることはない<br>\nサービスが部分的に劣化していることが当たり前であり、それを前提として稼働する。<br>\n全体で見るとup/downの2値ではないんだと</li>\n</ul>\n</li>\n<li>\n<p>ロギング</p>\n<ul>\n<li>中央データベースに集約(ex. elastic search)\nクエリやグラフを通じて分析や通知がされる</li>\n<li>S/N比、なんでもかんでも採取するとエラーが埋もれて検知が鈍くなる</li>\n<li>JSONで構造化しておこう</li>\n</ul>\n</li>\n<li>\n<p>メトリクス</p>\n<ul>\n<li>何かの状態を測定・集計した数値</li>\n<li>なぜか、の理解に役立つ、メモリ不足、CPU不足、I/Oが詰まる</li>\n<li>問題の予測に役立つ、障害の未然防止、アラート通知</li>\n</ul>\n</li>\n<li>\n<p>トレーシング\n分散システムで特に重要  </p>\n<ul>\n<li>単一のユーザリクエストがたどるライフサイクル全体を明らかにする</li>\n<li>一部ユーザのレイテンシなど</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> : Jaegerなどのツールがある</li>\n</ul>\n</li>\n<li>オブザーバビリティパイプライン\nログルータのような考え方か？<br>\nアプリ、コンテナ、インフラなどからデータ種類など問わずに一箇所のパイプラインに送信し、<br>\nパイプラインがフィルタして適切な場所に届ける。<br>\nPub/Sub的な考え方。  </li>\n<li>外部サービスの監視\nuptime robot</li>\n</ul>\n<h1 id=\"16章-kubernetesにおけるメトリクス\"><a href=\"#16%E7%AB%A0-kubernetes%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B%E3%83%A1%E3%83%88%E3%83%AA%E3%82%AF%E3%82%B9\" aria-label=\"16章 kubernetesにおけるメトリクス permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>16章 Kubernetesにおけるメトリクス</h1>\n<ul>\n<li>カウンタ\n増えていくだけの数字、リセットしない限り</li>\n<li>ゲージ\nメモリ使用率のように継続的に変化する量</li>\n<li>\n<p>何をメトリクスとすべきか</p>\n<ul>\n<li>\n<p>サービス: REDパターン(Requests-Errors-Duration)\nリクエスト駆動型</p>\n<ul>\n<li>リクエスト数</li>\n<li>エラー数</li>\n<li>処理時間</li>\n</ul>\n</li>\n<li>リソース: USEパターン(Utilization, Saturation, Errors)\n関心対象がサービスではなくリソース</li>\n<li>ビジネスメトリクス</li>\n<li>\n<p>Kubernetesのメトリクス</p>\n<ul>\n<li>クラスタ健全性のメトリクス</li>\n<li>Deploymentのメトリクス</li>\n<li>コンテナのメトリクス</li>\n<li>アプリケーションのメトリクス</li>\n<li>ランタイムのメトリクス</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"メトリクスの分析\"><a href=\"#%E3%83%A1%E3%83%88%E3%83%AA%E3%82%AF%E3%82%B9%E3%81%AE%E5%88%86%E6%9E%90\" aria-label=\"メトリクスの分析 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>メトリクスの分析</h2>\n<p>すごい一般的な話しかないので割愛。  </p>\n<ul>\n<li>\n<p>メトリクス周りのツール\n【Prometheusで統一していくのがいいのかな】</p>\n<ul>\n<li>Prometheus\nデファクトスタンダード<br>\n時系列メトリクスデータに基づく監視、アラートツール(Alertmanager)<br>\n事前設定されたポートでユーザのアプリケーションにHTTP接続して取れるものをスクレイプ する\n可視化はGrafanaが使われることが多い。  </li>\n<li>stackdriver</li>\n<li>cloudwatch</li>\n<li>Azure monitor</li>\n<li>Datadog\n高機能監視ツール</li>\n<li>New Relic\nアプリケーション重視</li>\n<li>NETDATA\nこれもイケてる。でもPrometheusでいいかな</li>\n</ul>\n</li>\n</ul>","timeToRead":27,"excerpt":"是非、買って読んで欲しい。\n学習のログを残す。\nhttps://www.oreilly.co.jp/books/9784873119014/ github\nhttps://github.com/cloudnativedevops/demo…","frontmatter":{"title":"[WIP]「Kubernetesで実践するクラウドネイティブDevOps」 学習ログ","cover":"https://unsplash.it/1152/300/?random?BirchintheRoses","date":"2020-03-27-k8s-study-v01","categories":["Ops"],"tags":["Kubernetes","DevOps"]},"fields":{"slug":"/3a2785c2-7104-5aa5-85b0-0b210653d98c","date":"March 26, 2020"}}},"pageContext":{"slug":"/3a2785c2-7104-5aa5-85b0-0b210653d98c","nexttitle":"統計検定準1級-03 ~確率分布と母関数~","nextslug":"/f8789909-08fa-58f1-b24d-396fe18f7fda","prevtitle":"統計検定準1級-04 ~確率分布と母関数~","prevslug":"/52a7da95-6a39-58b3-bd8c-239e6f214699"}}}